"""
Django settings for proj project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import kdb
from pathlib import Path


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-1s1nfv59%b(rs2jy_+xod8w@t=l9pu$-ex^@ef*x@p6l=udszj"


def __elektra_get_highest_idx(k: kdb.Key) -> int:
    count = k.getMeta("array").value
    return int(str(count).replace("#", "").replace("_", ""))


def elektra_key_generator(x: int):
    for i in range(0, x + 1):
        yield f"#{(len(str(i)) - 1) * '_'}{i}"


def elektra_get_child_key_names(k: kdb.Key) -> int:
    count = __elektra_get_highest_idx(k)

    for x in elektra_key_generator(count):
        yield f"{k.name}/{x}"


# Configure via LibElektra
with kdb.KDB() as k:
    ks = kdb.KeySet()
    k.get(ks, "/sw/django/#0/current")

    DEBUG = True if ks["/sw/django/#0/current/debug"].get() else False

    # Lists
    ALLOWED_HOSTS = [ks[key].value for key in elektra_get_child_key_names(ks["/sw/django/#0/current/allowed_hosts/"])]
    CSRF_TRUSTED_ORIGINS = [
        ks[key].value for key in elektra_get_child_key_names(ks["/sw/django/#0/current/csrf_origins/"])
    ]
    INSTALLED_APPS = [ks[key].value for key in elektra_get_child_key_names(ks["/sw/django/#0/current/apps/"])]

    DATABASES = {}

    for keyname in elektra_get_child_key_names(ks["/sw/django/#0/current/databases/"]):
        DATABASES[ks[keyname].value] = {
            "ENGINE": ks[f"{keyname}/engine"].value,
            "NAME": ks[f"{keyname}/name"].value,
            "USER": ks[f"{keyname}/user"].value,
            "PASSWORD": ks[f"{keyname}/password"].value,
            "PORT": ks[f"{keyname}/port"].value,
        }

# Application definition

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "proj.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "proj.wsgi.application"


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"
